# This is a basic workflow to help you get started with Actions

name: CD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
 deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    container:
      image:  dart:stable

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Print Dart SDK version
        run: dart --version

      - name: Install dependencies (cl_datahub_common)
        run: dart pub get
        working-directory: datahub_common

      - name: Prepare Pub Cache
        env:
          accessToken: ${{ secrets.accessToken }}
          refreshToken: ${{ secrets.refreshToken }}
          tokenEndpoint: ${{ secrets.tokenEndpoint }}
          scopes: ${{ secrets.scopes }}
          expiration: ${{ secrets.expiration }}
        run: sh ./ci_publish.sh

      - name: Verify formatting (cl_datahub_common)
        run: dart format --output=none --set-exit-if-changed .
        working-directory: datahub_common

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source (cl_datahub_common)
        run: dart analyze
        working-directory: datahub_common

      - name: Install dependencies (cl_datahub)
        run: dart pub get

      - name: Verify formatting (cl_datahub)
        run: dart format --output=none --set-exit-if-changed .

      - name: Generate code (cl_datahub)
        run: dart run build_runner build

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source (cl_datahub)
        run: dart analyze

      - name: Run tests (cl_datahub)
        run: dart test

      - name: Publish (cl_datahub_common)
        run: pub publish -f
        working-directory: datahub_common
        continue-on-error: true

      - name: Publish (cl_datahub)
        run: pub publish -f